<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Debuntarium</title>
    <link>https://debuntu.ru/tags/bash/</link>
    <description>Recent content in Bash on Debuntarium</description>
    <generator>Hugo</generator>
    <language>ru-ru</language>
    <lastBuildDate>Wed, 25 May 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://debuntu.ru/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Download all assets from Nexus&#39;s repository using curl</title>
      <link>https://debuntu.ru/n/download-all-assets-from-nexus-repository-using-curl/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      <guid>https://debuntu.ru/n/download-all-assets-from-nexus-repository-using-curl/</guid>
      <description>На скорую руку приготовил скрипт выкачивающий все файлы из какого-нибудь репо.&#xA;#!/bin/bash -e NXRM=&amp;#34;https://nexus.example.org:8081&amp;#34; USERPASS=&amp;#34;nx-pub-reader:Paqvl8oldO1EOarTcx8FAjuXZ&amp;#34; REPO=&amp;#34;cloudera-cm-6.3.1-hosted&amp;#34; FILEEXT=&amp;#34;rpm&amp;#34; FILENAME=&amp;#34;${REPO}.list&amp;#34; TOKEN=&amp;#34;&amp;#34; get_token(){ TOKEN=&amp;#34;&amp;#34; TMPTOKEN=&amp;#34;&amp;#34; TMPTOKEN=$(tail ${FILENAME} | grep &amp;#34;continuationToken&amp;#34;) TOKEN=&amp;#34;$(echo $TMPTOKEN | awk &amp;#39;{print $3}&amp;#39; | awk -F\&amp;#34; &amp;#39;{print $2}&amp;#39;)&amp;#34; if [[ &amp;#34;$TOKEN&amp;#34; = &amp;#34;&amp;#34; ]]; then return; fi TOKENFULL=&amp;#34;continuationToken=${TOKEN}&amp;amp;&amp;#34; echo $TOKEN } &amp;gt; ${FILENAME} while : ; do curl -u${USERPASS} -X &amp;#39;GET&amp;#39; \ &amp;#34;${NXRM}/service/rest/v1/assets?${TOKENFULL}repository=${REPO}&amp;#34; \ -H &amp;#39;accept: application/json&amp;#39; &amp;gt;&amp;gt; ${FILENAME} get_token if [[ &amp;#34;$TOKEN&amp;#34; = &amp;#34;&amp;#34; ]]; then break; fi done grep -n &amp;#34;downloadUrl&amp;#34; ${REPO}.</description>
    </item>
    <item>
      <title>Срипт для добавления PTR-записей по списку из файла в обратную DNS-зону FreeIPA</title>
      <link>https://debuntu.ru/n/sript-dlya-dobavleniya-ptr-zapisei-po-spisku-iz-faila-v-obratnuyu-dns-zonu-freeipa/</link>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://debuntu.ru/n/sript-dlya-dobavleniya-ptr-zapisei-po-spisku-iz-faila-v-obratnuyu-dns-zonu-freeipa/</guid>
      <description>2021-01-25&#xA;Образец файла со списком узлов в формате hosts:&#xA;# cat ip.hosts 10.1.195.1 is01-airf01p.example.org 10.1.195.3 is01-app01p.example.org 10.1.195.4 is01-app02p.example.org 10.1.112.52 is02-app208p.example.org 10.1.112.53 is02-app209p.example.org Скрипт для добавления PTR-записей в соответствующие обратные зоны:&#xA;add_dns_record.sh #!/bin/bash LIST=&amp;#34;ip.hosts&amp;#34; while read line; do echo &amp;#34;&amp;#34; echo $line # &amp;#34;10.1.195.1 is01-airf01p.example.org&amp;#34; arr1=($line) # конвертируем переменную в массив из двух элементов ip1=${arr1[0]} # &amp;#34;10.1.195.1&amp;#34; IFS=&amp;#34;.&amp;#34; # разделитель пробел меняем на точку для bash substring arr2=($ip1) # конвертируем ip-адрес в массив &amp;#34;10 15 195 1&amp;#34; IFS=&amp;#34; &amp;#34; # возвращаем разделить ZONE=&amp;#34;${arr2[2]}.</description>
    </item>
  </channel>
</rss>
