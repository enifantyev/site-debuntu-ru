<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PostgreSQL on Debuntarium</title>
    <link>https://debuntu.ru/tags/postgresql/</link>
    <description>Recent content in PostgreSQL on Debuntarium</description>
    <generator>Hugo</generator>
    <language>ru-ru</language>
    <lastBuildDate>Tue, 02 May 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://debuntu.ru/tags/postgresql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PostgreSQL14. CentOS7. Установка</title>
      <link>https://debuntu.ru/manuals/databases/postgresql/postgresql14-centos7-ustanovka/</link>
      <pubDate>Tue, 02 May 2023 00:00:00 +0000</pubDate>
      <guid>https://debuntu.ru/manuals/databases/postgresql/postgresql14-centos7-ustanovka/</guid>
      <description>2023-05-02&#xA;1. Добавление yum-репозитория Добавляем файл-репо:&#xA;USERNAME=nx-pubrepo-reader PASSWORD=xxxxxxxxxxxxxxxxx cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/yum.repos.d/pgdg-14.repo [pgdg-common] username=$USERNAME password=$PASSWORD name=PostgreSQL common RPMs for RHEL/CentOS \$releasever - \$basearch baseurl=http://nexus.example.org:8081/repository/pub_postgresql_yum/common/redhat/rhel-\$releasever-\$basearch enabled=1 gpgcheck=0 gpgkey=http://nexus.example.org:8081/repository/pub_postgresql_yum/RPM-GPG-KEY-PGDG-AARCH64 [pgdg14] username=$USERNAME password=$PASSWORD name=PostgreSQL 14 for RHEL/CentOS \$releasever - \$basearch baseurl=http://nexus.example.org:8081/repository/pub_postgresql_yum/14/redhat/rhel-\$releasever-\$basearch enabled=1 gpgcheck=0 gpgkey=http://nexus.example.org:8081/repository/pub_postgresql_yum/RPM-GPG-KEY-PGDG-AARCH64 EOF Проверяем подключение к репо:&#xA;yum check-update 2. Установка PostgreSQL Устанавливаем PostgreSQL командой: yum install -y postgresql14-server 3. Инициализация базы данных Выполняем:&#xA;/usr/pgsql-14/bin/postgresql-14-setup initdb База данных будет создана в /var/lib/pgsql/14/data.</description>
    </item>
    <item>
      <title>Использование Apache Sqoop для импорта/экспорта данных между PostgreSQL и HDFS</title>
      <link>https://debuntu.ru/a/ispolzovanie-apache-sqoop-dlya-importa-eksporta-dannyh-mezhdu-postgresql-i-hdfs/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://debuntu.ru/a/ispolzovanie-apache-sqoop-dlya-importa-eksporta-dannyh-mezhdu-postgresql-i-hdfs/</guid>
      <description>2020-11-01&#xA;Использованные материалы:&#xA;Sqoop User Guide (v1.4.6) An HDFS Tutorial for Data Analysts Stuck with Relational Databases Импорт из PostgreSQL в HDFS Подготовка к импорту PostgreSQL должен слушать на внешнем порту, чтобы к нему была возможность подключиться по сети. Если в PostgreSQL используется сетевой порт, отличный от стандартного (5432), то его необходимо указывать в подаваемых командах.&#xA;Выполнять &amp;lsquo;sqoop import&amp;rsquo; не обязательно с того хоста, у которого есть роль &amp;lsquo;Sqoop&amp;rsquo;. Он работает с любого хоста кластера, у которого есть соответствующий gateway в тот сервис, куда импортируются/экспортируются данные.</description>
    </item>
    <item>
      <title>Добавление в NXRM единого репозитория для всех версий PostgreSQL</title>
      <link>https://debuntu.ru/n/dobavlenie-v-nxrm-edinogo-repozitoriya-dlya-vseh-versii-postgresql/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://debuntu.ru/n/dobavlenie-v-nxrm-edinogo-repozitoriya-dlya-vseh-versii-postgresql/</guid>
      <description>2020-10-18&#xA;Добавляем отдельный блоб для хранения пакетов PostgreSQL.&#xA;Добавляем репозиторий Remote storage: https://download.postgresql.org/pub/repos/yum/&#xA;Содержимое файла pgdg-redhat-all.repo для деплоя на машины:&#xA;####################################################### # PGDG Red Hat Enterprise Linux / CentOS repositories # ####################################################### # PGDG Red Hat Enterprise Linux / CentOS stable common repository for all PostgreSQL versions [pgdg-common] name=PostgreSQL common RPMs for RHEL/CentOS $releasever - $basearch baseurl=http://nxrm.example.org:8081/repository/PostgreSQL/common/redhat/rhel-$releasever-$basearch enabled=1 gpgcheck=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-PGDG-AARCH64 # PGDG Red Hat Enterprise Linux / CentOS stable repositories: [pgdg13] name=PostgreSQL 13 for RHEL/CentOS $releasever - $basearch baseurl=http://nxrm.</description>
    </item>
    <item>
      <title>Бэкап дампа базы Postgresql и его восстановление на новом сервере</title>
      <link>https://debuntu.ru/a/bekap-dampa-bazy-postgresql-i-ego-vosstanovlenie-na-novom-servere/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://debuntu.ru/a/bekap-dampa-bazy-postgresql-i-ego-vosstanovlenie-na-novom-servere/</guid>
      <description>2020-04-21&#xA;Создание дампа может занять продолжительное время, поэтому работы производим через screen, который позволит нам сохранить работающий сеанс на сервере, даже если мы отключимся случайно или по какой-то причине.&#xA;Работы на исходном сервере Сбор сведений перед созданием дампа На исходном сервере запоминаем версию postgresql:&#xA;# rpm -qa|grep sql postgresql11-server-11.4-1PGDG.rhel7.x86_64 postgresql11-11.4-1PGDG.rhel7.x86_64 postgresql11-libs-11.4-1PGDG.rhel7.x86_64 Смотрим who и активные сетевые подключения через ss -tul, чтобы удостовериться в своём одиноком присутствии на сервере.&#xA;Ознакомимся со свободным местом на сервере, где увидим, что есть свободные 340G:</description>
    </item>
    <item>
      <title>Установка PostgreSQL 9.0 на Debian 6.0</title>
      <link>https://debuntu.ru/a/ustanovka-postgresql-90-na-debian-60/</link>
      <pubDate>Thu, 17 Mar 2011 00:00:00 +0000</pubDate>
      <guid>https://debuntu.ru/a/ustanovka-postgresql-90-na-debian-60/</guid>
      <description> </description>
    </item>
  </channel>
</rss>
